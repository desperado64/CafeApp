#pragma checksum "C:\Users\mg\source\repos\desperado64\CafeApp\DxCafeApp\Pages\Admin\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7dba6ddd30d7e331e54aea8d5ca089ab77b96c39"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(DxCafeApp.Pages.Admin.Pages_Admin_Index), @"mvc.1.0.razor-page", @"/Pages/Admin/Index.cshtml")]
namespace DxCafeApp.Pages.Admin
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\mg\source\repos\desperado64\CafeApp\DxCafeApp\Pages\_ViewImports.cshtml"
using DxCafeApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\mg\source\repos\desperado64\CafeApp\DxCafeApp\Pages\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mg\source\repos\desperado64\CafeApp\DxCafeApp\Pages\Admin\Index.cshtml"
using DxCafeApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7dba6ddd30d7e331e54aea8d5ca089ab77b96c39", @"/Pages/Admin/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8aaf9a5b27400dbc6864ae3d65a36b73415348a3", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Admin_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n<style>\r\n    #pie {\r\n        height: 440px;\r\n    }\r\n</style>\r\n\r\n\r\n<div class=\"p-2\">\r\n\r\n    <h2>Admin - Dashboard</h2>\r\n    ");
#nullable restore
#line 16 "C:\Users\mg\source\repos\desperado64\CafeApp\DxCafeApp\Pages\Admin\Index.cshtml"
Write(Html.DevExtreme().PieChart()
    .ID("pie")
    .Palette(VizPalette.Ocean)
    .Type(PieChartType.Doughnut)
    .Title("Product Count In Categories")
    .Tooltip(t => t
        .Enabled(true)
        .Format(Format.Decimal)
        .CustomizeTooltip(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\r\n            function(arg) {\r\n                return {\r\n                    text: arg.valueText + \" - \" + (arg.percent * 100).toFixed(2) + \"%\"\r\n                };\r\n            }\r\n        ");
    PopWriter();
}
))
    )
    .Legend(l => l
        .HorizontalAlignment(HorizontalAlignment.Right)
        .VerticalAlignment(VerticalEdge.Top)
        .Margin(0)
    )
    .Export(e => e.Enabled(true))
    .Series(s => s
        .Add()
        .ArgumentField("CategoryName")
        .ValueField("ProductCount")
        .Label(l => l
            .Visible(true)
            .Format(Format.Decimal)
            .Connector(c => c.Visible(true))
        )
    )
    .DataSource(d => d.Mvc().Controller("Dashboard").LoadAction("Pie").Key("CategoryID"))
);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n    <br /><br />\r\n\r\n    <h2>Daily Prices</h2>\r\n\r\n    ");
#nullable restore
#line 55 "C:\Users\mg\source\repos\desperado64\CafeApp\DxCafeApp\Pages\Admin\Index.cshtml"
Write(Html.DevExtreme().DataGrid<DailyPrice>()
    .ID("gridContainer")
    .DataSource(d => d.Array().Data(new JS("products")).Key("ProductID"))
    .DataSourceOptions(o => o.ReshapeOnPush(true))
    .RepaintChangesOnly(true)
    .ColumnAutoWidth(true)
    .ShowBorders(true)
    .Paging(p => p.PageSize(10))
    .Columns(columns => {
        columns.AddFor(m => m.ParentCategoryName);
        columns.AddFor(m => m.CategoryName);
        columns.AddFor(m => m.ProductName);
        columns.AddFor(m => m.Price)
             .DataType(GridColumnDataType.Number)
            .Format(Format.Currency);
        columns.AddFor(m => m.PriceTL)
          .DataType(GridColumnDataType.Number)
              .Format(new JS("xcurrency"));
    }).Summary(s =>
        s.TotalItems(totalItems =>
        {
            totalItems.Add()
                .SummaryType(SummaryType.Count)
                .Column("ProductName");
            totalItems.Add()
                .SummaryType(SummaryType.Sum)
                .DisplayFormat("{0}")
                .ValueFormat(Format.Currency)
                .Column("Price");
            totalItems.Add()
                .SummaryType(SummaryType.Sum)
                .DisplayFormat("{0}")
                .ValueFormat(new JS("xcurrency"))
                .Column("PriceTL");
        })
    )
);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script>

    var xcurrency = { style: ""currency"", currency: ""TRY"", useGrouping: true };

    var products = [];
    //async function fetchAsync() {
    //    // await response of fetch call
    //    let response = await fetch('/api/Dashboard/DailyPrices');
    //    // only proceed once promise is resolved
    //    let data = await response.json();
    //    // only proceed once second promise is resolved

    //    return data
    //}

    $(function () {
        dailyPrices();
        setInterval(function () {            

            dailyPrices();
            
        },10000)
    });

    function dailyPrices() {
        fetch('/api/Dashboard/DailyPrices')
            .then(response => response.json())
            .then(x => {
                var grid = $('#gridContainer').dxDataGrid('instance');
                grid.option('dataSource', []);
                var productsStore = $('#gridContainer').dxDataGrid(""getDataSource"").store();
                for (var i = 0; i");
            WriteLiteral(" < x.length; i++) {\r\n                    productsStore.push([\r\n                        { type: \"insert\", data: x[i] }\r\n                    ])\r\n                }\r\n            });\r\n    }\r\n\r\n</script>\r\n\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DxCafeApp.Pages.Admin.IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<DxCafeApp.Pages.Admin.IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<DxCafeApp.Pages.Admin.IndexModel>)PageContext?.ViewData;
        public DxCafeApp.Pages.Admin.IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
